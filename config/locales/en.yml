# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t 'hello'
#
# In views, this is aliased to just `t`:
#
#     <%= t('hello') %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# The following keys must be escaped otherwise they will not be retrieved by
# the default I18n backend:
#
# true, false, on, off, yes, no
#
# Instead, surround them with single quotes.
#
# en:
#   'true': 'foo'
#
# To learn more, please read the Rails Internationalization guide
# available at https://guides.rubyonrails.org/i18n.html.

en:
  dry_validation:
    errors:
      cannot_grant_role_on_entity: "You do not have access to grant roles to this entity."
      cannot_grant_role_to_self: "You cannot grant a role to yourself."
      cannot_grant_unassignable_role: "You do not have access to grant %{role_name} on this entity."
      cannot_revoke_role_on_entity: "You do not have access to revoke roles to this entity."
      cannot_revoke_role_from_self: "You cannot revoke a role from yourself."
      cannot_revoke_unassignable_role: "You do not have access to revoke %{role_name} on this entity."
      cannot_parent_itself: "cannot parent itself"
      cannot_own_parent: "cannot be reparented by a descendant"
      destroy_collection_with_subcollections: "This collection must have all its collections removed prior to deletion."
      destroy_collection_with_items: "This collection must have all its items removed prior to deletion."
      destroy_community_with_collections: "This community must have all of its collections removed prior to deletion."
      destroy_item_with_subitems: "This item must have all its items removed prior to deletion."
      invalid_identifier: "must be a valid identifier (at least three characters, must start with a letter, all lowercase, alphanumeric, dashes allowed)"
      invalid_new_schema_for_parent: "has a parent that does not accept an entity of type %{declaration} as a child"
      invalid_parent_for_schema: "cannot be assigned to an entity with a parent of type %{declaration}"
      invalid_schema_child: "does not accept an entity of type %{declaration} as a child"
      invalid_schema_parent: "does not accept an entity of type %{declaration} as a parent"
      limited_visibility_inverted_range: "comes before the start of the range"
      limited_visibility_requires_range: "must have a range set when visibility is limited"
      linked_to_parent: "cannot be linked to its parent"
      linked_to_itself: "cannot be linked to itself"
      must_be_associated_with_entity: "must be associated with the provided entity"
      must_be_email: "must be an email"
      must_be_entity: "must be an entity"
      must_be_orcid: "must be a valid ORCID URL: https://orcid.org/xxxx-xxxx-xxxx-xxxx"
      must_be_ordering: "must be an ordering"
      must_be_slug: "must be a valid slug (all lowercase, no whitespace)"
      must_be_unique_doi: "must be a unique DOI"
      must_be_unique_identifier: "must be a unique slug for the entity"
      must_be_unique_orcid: "has already been assigned to another contributor"
      must_be_unique_slug: "must be a unique slug for the entity"
      must_be_url: "must be a valid HTTP URL"
      range_required_when_limited_visibility: "must be set when visibility is limited"
      schematic_references:
        collected:
          invalid_entity: "received an out-of-scope entity at the %{ord} position"
          must_match: "received an instance of %{actual} at the %{ord} position, but expected %{models}"
        scalar:
          invalid_entity: "received an out-of-scope entity"
          must_match: "received an instance of %{actual}, but expected %{models}"
      unacceptable_edge: "An entity of type '%{parent}' cannot be a direct parent of '%{child}'"
      update_and_clear_attachment: "cannot receive a new attachment while also clearing it"
  frozen:
    static_orderable_property:
      entity_title:
        label: Title
        description: >
          The title of the entity.
      entity_created_at:
        label: Created
        description: >
          The time that the entity was first created in the WDP.
      entity_updated_at:
        label: Updated
        description: >
          The time that the entity was last updated in the WDP.
      entity_depth:
        label: Hierarchical Depth
        description: >
          The hierarchical depth of the entity. It is useful when creating orderings of varying depths, in order to ensure that higher-level entities appear before or after their counterparts.
      entity_published:
        label: Published
        description: >
          The variable precision date when the entity was published.
      entity_issued:
        label: Issued
        description: >
          The variable precision date when the entity was issued.
      entity_available:
        label: Available
        description: >
          The variable precision date when the entity was made available.
      entity_accessioned:
        label: Accessioned
        description: >
          The variable precision date when the entity was added to a collection, library, volume, etc.
      link_is_link:
        label: Is Link?
        description: >
          A simple boolean switch used to sort links before or after other types.
      schema_kind:
        label: Schema Kind
        description: "For multi-schema orderings, set to ascending to sort collections before items, or descending to sort items before collections."
      schema_name:
        label: Schema Name
        description: "For multi-schema orderings, sort by the name of the schema."
  server_messages:
    tokens:
      expired: "Token is Expired"
      invalid: "Failed to Authenticate"

<%-
  # vim: set ft=ruby.eruby nosmartindent noautoindent :
-%>
# frozen_string_literal: true

module Templates
  # @see <%= layout_record.instance_klass_name %>
  # @see <%= template_record.definition_klass_name %>
  # @see <%= template_record.slot_instance_mapping_klass_name %>
  # @see <%= template_record.gql_instance_klass_name %>
  class <%= class_name %>Instance < ApplicationRecord
    include HasEphemeralSystemSlug
    include TemplateInstance
    <%- if template_record.has_announcements? -%>
    include Templates::Instances::HasAnnouncements
    <%- end -%>
    <%- if template_record.has_contribution_list? -%>
    include Templates::Instances::HasContributionList
    <%- end -%>
    <%- if template_record.has_entity_list? -%>
    include Templates::Instances::HasEntityList
    <%- end -%>
    <%- if template_record.has_ordering_pair? -%>
    include Templates::Instances::HasOrderingPair
    <%- end -%>
    <%- if template_record.has_see_all_ordering? -%>
    include Templates::Instances::HasSeeAllOrdering
    <%- end -%>
    include TimestampScopes

    layout_kind! <%= layout_kind.to_sym.inspect %>
    template_kind! <%= template_kind.to_sym.inspect %>

    attribute :slots, ::<%= template_record.slot_instance_mapping_klass_name %>.to_type

    graphql_node_type_name "::<%= template_record.gql_instance_klass_name %>"

    belongs_to :layout_instance,
      class_name: <%= layout_record.instance_klass_name.inspect %>,
      inverse_of: :<%= template_kind %>_template_instances

    belongs_to :template_definition,
      class_name: <%= template_record.definition_klass_name.inspect %>,
      inverse_of: :template_instances

    belongs_to :entity, polymorphic: true
  end
end

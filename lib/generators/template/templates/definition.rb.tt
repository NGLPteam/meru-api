<%-
  # vim: set ft=ruby.eruby nosmartindent noautoindent :
-%>
# frozen_string_literal: true

module Templates
  # @see <%= layout_record.definition_klass_name %>
  # @see <%= template_record.instance_klass_name %>
  # @see <%= template_record.config_klass_name %>
  # @see <%= template_record.slot_definition_mapping_klass_name %>
  # @see <%= template_record.gql_definition_klass_name %>
  class <%= class_name %>Definition < ApplicationRecord
    include HasEphemeralSystemSlug
    include TemplateDefinition
    <%- if template_record.has_entity_list? -%>
    include Templates::Definitions::HasEntityList
    <%- end -%>
    <%- if template_record.has_ordering_pair? -%>
    include Templates::Definitions::HasOrderingPair
    <%- end -%>
    include TimestampScopes

    layout_kind! <%= layout_kind.to_sym.inspect %>
    template_kind! <%= template_kind.to_sym.inspect %>

    graphql_node_type_name "::<%= template_record.gql_definition_klass_name %>"

    <%= definition_model_declarations(indent: 4) %>

    belongs_to :layout_definition,
      class_name: <%= layout_record.definition_klass_name.inspect %>,
      inverse_of: :<%= template_kind %>_template_definitions

    has_many :template_instances,
      class_name: <%= template_record.instance_klass_name.inspect %>,
      dependent: :destroy,
      inverse_of: :template_definition,
      foreign_key: :template_definition_id
  end
end

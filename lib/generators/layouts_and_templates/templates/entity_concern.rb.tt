<%-
  # vim: set ft=ruby.eruby nosmartindent noautoindent :
-%>
# frozen_string_literal: true

# @see ::Types::EntityLayoutsType
module EntityTemplating
  extend ActiveSupport::Concern
  extend DefinesMonadicOperation

  include EntityTemplatingSupport
  include ModelMutationSupport

  included do
    has_many :layout_definition_hierarchies, as: :entity, inverse_of: :entity, dependent: :delete_all

    has_many :layout_instance_digests, as: :entity, inverse_of: :entity, class_name: "Layouts::InstanceDigest", dependent: :delete_all

    has_many :layout_invalidations, as: :entity, inverse_of: :entity, dependent: :delete_all

    has_one_readonly :stale_entity, as: :entity, inverse_of: :entity

    has_many :rendering_entity_logs, as: :entity, inverse_of: :entity, class_name: "Rendering::EntityLog", dependent: :delete_all

    has_many :rendering_layout_logs, as: :entity, inverse_of: :entity, class_name: "Rendering::LayoutLog", dependent: :delete_all

    has_many :rendering_template_logs, as: :entity, inverse_of: :entity, class_name: "Rendering::TemplateLog", dependent: :delete_all

    has_many :template_instance_digests, as: :entity, inverse_of: :entity, class_name: "Templates::InstanceDigest", dependent: :delete_all
    <%- layout_kinds.each do |layout_kind| -%>

    has_many :<%= layout_kind %>_layout_definitions,
      class_name: "Layouts::<%= layout_kind.classify %>Definition",
      as: :entity,
      dependent: :destroy

    has_one :<%= layout_kind %>_layout_instance,
      class_name: "Layouts::<%= layout_kind.classify %>Instance",
      as: :entity,
      inverse_of: :entity,
      dependent: :destroy
    <%- end -%>
  end
end
